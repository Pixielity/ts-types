{"version":3,"sources":["../../../src/interfaces/decorators/validation-function.interface.ts"],"names":["IValidationFunction"],"mappings":";;;;;;;;;;;;;AAoBiBA;AAAA,CAAV,CAAUA,oBAAV,KAAA;AAIE,EAAMA,oBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,qBAAqB,CAAA;AAAA,CAJlC,EAAAA,2BAAA,KAAAA,2BAAA,GAAA,EAAA,CAAA,CAAA","file":"validation-function.interface.js","sourcesContent":["import type { ValidationArguments } from \"class-validator\"\n\n/**\n * Interface for validation function\n * Used for custom validation rules\n */\nexport interface IValidationFunction {\n  /**\n   * Validate a value\n   *\n   * @param value - The value to validate\n   * @param args - The validation arguments\n   * @returns Whether the value is valid or a promise that resolves to whether the value is valid\n   */\n  (value: any, args: ValidationArguments): boolean | Promise<boolean>\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IValidationFunction {\n  /**\n   * Symbol for injecting the validation function service\n   */\n  export const $ = Symbol.for(\"IValidationFunction\")\n}\n"]}