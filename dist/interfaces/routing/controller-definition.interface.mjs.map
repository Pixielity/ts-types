{"version":3,"sources":["../../../src/interfaces/routing/controller-definition.interface.ts"],"names":["IControllerDefinition"],"mappings":";;;;;;;;;;;AAyCiB,IAAA;AAAA,CAAV,CAAUA,sBAAV,KAAA;AAIE,EAAMA,sBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,uBAAuB,CAAA;AAAA,CAJpC,EAAA,qBAAA,KAAA,qBAAA,GAAA,EAAA,CAAA,CAAA","file":"controller-definition.interface.mjs","sourcesContent":["import type { IRouteDefinition } from './route-definition.interface'\n\n/**\n * Interface for controller definitions\n * Contains all metadata needed to register and handle a controller\n */\nexport interface IControllerDefinition {\n  /**\n   * The controller constructor\n   */\n  controller: any\n\n  /**\n   * The route prefix for all routes in this controller\n   */\n  prefix: string\n\n  /**\n   * The controller-level middleware (applied to all routes)\n   */\n  middleware: any[]\n\n  /**\n   * The controller-level guards (applied to all routes)\n   */\n  guards: any[]\n\n  /**\n   * The controller routes\n   */\n  routes: IRouteDefinition[]\n\n  /**\n   * Additional metadata for custom extensions\n   */\n  metadata: Record<string, any>\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IControllerDefinition {\n  /**\n   * Symbol for injecting the controller definition service\n   */\n  export const $ = Symbol.for('IControllerDefinition')\n}\n"]}