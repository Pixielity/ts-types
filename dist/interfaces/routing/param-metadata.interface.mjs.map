{"version":3,"sources":["../../../src/interfaces/routing/param-metadata.interface.ts"],"names":["IParamMetadata"],"mappings":";;;;;;;;;;;AA2BiB,IAAA;AAAA,CAAV,CAAUA,eAAV,KAAA;AAIE,EAAMA,eAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,gBAAgB,CAAA;AAAA,CAJ7B,EAAA,cAAA,KAAA,cAAA,GAAA,EAAA,CAAA,CAAA","file":"param-metadata.interface.mjs","sourcesContent":["import type { ParamType } from '../../enums'\n\n/**\n * Interface for parameter metadata\n * Describes how controller method parameters should be resolved\n */\nexport interface IParamMetadata {\n  /**\n   * The parameter index in the method signature\n   */\n  index: number\n\n  /**\n   * The parameter type (e.g., PARAM, QUERY, BODY)\n   */\n  type: ParamType\n\n  /**\n   * The parameter name to extract from the request\n   * If null, the entire object of the specified type is passed\n   */\n  name: string | null\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IParamMetadata {\n  /**\n   * Symbol for injecting the param metadata service\n   */\n  export const $ = Symbol.for('IParamMetadata')\n}\n"]}