{"version":3,"sources":["../../../src/interfaces/routing/router-config.interface.ts"],"names":["IRouterConfig"],"mappings":";;;;;;;;;;;AA8CiB,IAAA;AAAA,CAAV,CAAUA,cAAV,KAAA;AAIE,EAAMA,cAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,eAAe,CAAA;AAAA,CAJ5B,EAAA,aAAA,KAAA,aAAA,GAAA,EAAA,CAAA,CAAA","file":"router-config.interface.mjs","sourcesContent":["/**\n * Interface for router configuration\n * Defines global settings for the router\n */\nexport interface IRouterConfig {\n  /**\n   * The base path for all routes\n   * @default \"/api\"\n   */\n  basePath?: string\n\n  /**\n   * Whether to automatically register controllers\n   * When true, controllers are discovered and registered at startup\n   * @default true\n   */\n  autoRegister?: boolean\n\n  /**\n   * Default middleware for all routes\n   * These are executed before controller and route middleware\n   */\n  globalMiddleware?: any[]\n\n  /**\n   * Default guards for all routes\n   * These are executed before controller and route guards\n   */\n  globalGuards?: any[]\n\n  /**\n   * Whether to enable versioning for API routes\n   * @default false\n   */\n  enableVersioning?: boolean\n\n  /**\n   * The versioning strategy to use\n   * @default \"uri\"\n   */\n  versioningStrategy?: 'uri' | 'header' | 'query'\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IRouterConfig {\n  /**\n   * Symbol for injecting the router config service\n   */\n  export const $ = Symbol.for('IRouterConfig')\n}\n"]}