{"version":3,"sources":["../../../src/interfaces/routing/route-options.interface.ts"],"names":["IRouteOptions"],"mappings":";;;;;;;;;;;;;AAsCiBA;AAAA,CAAV,CAAUA,cAAV,KAAA;AAIE,EAAMA,cAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,eAAe,CAAA;AAAA,CAJ5B,EAAAA,qBAAA,KAAAA,qBAAA,GAAA,EAAA,CAAA,CAAA","file":"route-options.interface.js","sourcesContent":["/**\n * Options for the Route decorator\n * Configures route-specific behavior\n */\nexport interface IRouteOptions {\n  /**\n   * Route-specific middleware\n   * These are executed after controller middleware but before the route handler\n   */\n  middleware?: any[]\n\n  /**\n   * Route-specific guards\n   * These are executed after controller guards but before the route handler\n   */\n  guards?: any[]\n\n  /**\n   * Additional metadata for the route\n   * Can be used for documentation, validation, or custom extensions\n   */\n  metadata?: Record<string, any>\n\n  /**\n   * Whether the route is deprecated\n   * @default false\n   */\n  deprecated?: boolean\n\n  /**\n   * Route description for documentation\n   */\n  description?: string\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IRouteOptions {\n  /**\n   * Symbol for injecting the route options service\n   */\n  export const $ = Symbol.for(\"IRouteOptions\")\n}\n"]}