{"version":3,"sources":["../../../src/interfaces/routing/middleware.interface.ts"],"names":["IMiddleware"],"mappings":";;;;;;;;;;;AAsBiB,IAAA;AAAA,CAAV,CAAUA,YAAV,KAAA;AAIE,EAAMA,YAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,aAAa,CAAA;AAAA,CAJ1B,EAAA,WAAA,KAAA,WAAA,GAAA,EAAA,CAAA,CAAA","file":"middleware.interface.mjs","sourcesContent":["import type { NextApiRequest, NextApiResponse } from \"next\"\n\n/**\n * Interface for route middleware\n * Middleware intercepts requests before they reach the route handler\n * and can modify the request/response or terminate the request early\n */\nexport interface IMiddleware {\n  /**\n   * Middleware handler function\n   *\n   * @param req - The Next.js API request\n   * @param res - The Next.js API response\n   * @param next - The next function to call to continue the middleware chain\n   * @returns A promise that resolves when the middleware has completed\n   */\n  (req: NextApiRequest, res: NextApiResponse, next: () => Promise<void>): Promise<void>\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IMiddleware {\n  /**\n   * Symbol for injecting the middleware service\n   */\n  export const $ = Symbol.for(\"IMiddleware\")\n}\n"]}