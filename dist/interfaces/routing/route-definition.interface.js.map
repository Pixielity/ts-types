{"version":3,"sources":["../../../src/interfaces/routing/route-definition.interface.ts"],"names":["IRouteDefinition"],"mappings":";;;;;;;;;;;;;AA+CiBA;AAAA,CAAV,CAAUA,iBAAV,KAAA;AAIE,EAAMA,iBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,kBAAkB,CAAA;AAAA,CAJ/B,EAAAA,wBAAA,KAAAA,wBAAA,GAAA,EAAA,CAAA,CAAA","file":"route-definition.interface.js","sourcesContent":["import type { HttpMethod } from \"../../types\"\nimport type { IParamMetadata } from \"./param-metadata.interface\"\n\n/**\n * Interface for route definitions\n * Contains all metadata needed to register and handle a route\n */\nexport interface IRouteDefinition {\n  /**\n   * The HTTP method for the route (GET, POST, etc.)\n   */\n  method: HttpMethod\n\n  /**\n   * The route path relative to the controller prefix\n   */\n  path: string\n\n  /**\n   * The handler method name in the controller class\n   */\n  handlerName: string | symbol\n\n  /**\n   * The route-specific middleware (executed after controller middleware)\n   */\n  middleware: any[]\n\n  /**\n   * The route-specific guards (executed after controller guards)\n   */\n  guards: any[]\n\n  /**\n   * The parameter metadata for dependency injection\n   */\n  params: IParamMetadata[]\n\n  /**\n   * Additional metadata for custom extensions\n   */\n  metadata: Record<string, any>\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IRouteDefinition {\n  /**\n   * Symbol for injecting the route definition service\n   */\n  export const $ = Symbol.for(\"IRouteDefinition\")\n}\n"]}