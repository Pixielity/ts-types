{"version":3,"sources":["../../../src/interfaces/queue/should-queue.interface.ts"],"names":["IShouldQueue"],"mappings":";;;;;;;;;;;AAqCiB,IAAA;AAAA,CAAV,CAAUA,aAAV,KAAA;AACE,EAAMA,aAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,cAAc,CAAA;AAAA,CAD3B,EAAA,YAAA,KAAA,YAAA,GAAA,EAAA,CAAA,CAAA","file":"should-queue.interface.mjs","sourcesContent":["/**\n * Interface for objects that can be queued.\n * Implementing this interface indicates that the object should be processed asynchronously.\n */\nexport interface IShouldQueue {\n  /**\n   * Determine if the object should be queued.\n   *\n   * @returns {boolean} True if the object should be queued\n   */\n  shouldQueue(): boolean\n\n  /**\n   * Get the connection the job should be sent to.\n   *\n   * @returns {string|null} The connection name or null for the default\n   */\n  connection?(): string | null\n\n  /**\n   * Get the queue the job should be sent to.\n   *\n   * @returns {string|null} The queue name or null for the default\n   */\n  queue?(): string | null\n\n  /**\n   * Get the delay (in seconds) before the job should be processed.\n   *\n   * @returns {number} The number of seconds to delay\n   */\n  delay?(): number\n}\n\n/**\n * DI token for IShouldQueue interface\n */\nexport namespace IShouldQueue {\n  export const $ = Symbol.for('IShouldQueue')\n}\n"]}