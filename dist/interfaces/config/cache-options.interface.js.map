{"version":3,"sources":["../../../src/interfaces/config/cache-options.interface.ts"],"names":["IConfigCacheOptions"],"mappings":";;;;;;;;;;;;;AAuCiBA;AAAA,CAAV,CAAUA,oBAAV,KAAA;AAIE,EAAMA,oBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,qBAAqB,CAAA;AAAA,CAJlC,EAAAA,2BAAA,KAAAA,2BAAA,GAAA,EAAA,CAAA,CAAA","file":"cache-options.interface.js","sourcesContent":["/**\n * Configuration cache options\n * Controls how configuration values are cached\n */\nexport interface IConfigCacheOptions {\n  /**\n   * Whether the cache is enabled\n   * @default true\n   */\n  enabled?: boolean\n\n  /**\n   * The maximum number of items to store in the cache\n   * @default 1000\n   */\n  maxSize?: number\n\n  /**\n   * The time to live for cache items in milliseconds\n   * @default 0 (no expiration)\n   */\n  ttl?: number\n\n  /**\n   * Whether to use a persistent cache\n   * @default false\n   */\n  persistent?: boolean\n\n  /**\n   * The storage key for persistent cache\n   * @default \"config_cache\"\n   */\n  storageKey?: string\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IConfigCacheOptions {\n  /**\n   * Symbol for injecting the config cache options service\n   */\n  export const $ = Symbol.for('IConfigCacheOptions')\n}\n"]}