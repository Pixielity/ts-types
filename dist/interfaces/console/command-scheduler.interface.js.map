{"version":3,"sources":["../../../src/interfaces/console/command-scheduler.interface.ts"],"names":["ICommandScheduler"],"mappings":";;;;;;;;;;;;;AA4DiBA;AAAA,CAAV,CAAUA,kBAAV,KAAA;AAKE,EAAMA,kBAAAA,CAAA,CAAI,GAAA,MAAA,CAAO,mBAAmB,CAAA;AAAA,CAL5B,EAAAA,yBAAA,KAAAA,yBAAA,GAAA,EAAA,CAAA,CAAA","file":"command-scheduler.interface.js","sourcesContent":["import type { IScheduleExpression } from './schedule-expression.interface'\nimport type { IScheduledTask } from './scheduled-task.interface'\n\n/**\n * Interface for the command scheduler\n *\n * Schedules commands to run at specific intervals.\n */\nexport interface ICommandScheduler {\n  /**\n   * Schedules a command to run at a specific interval\n   *\n   * @param {string} commandName - The name of the command\n   * @param {IScheduleExpression} expression - The schedule expression\n   * @param {string[]} args - The arguments to pass to the command\n   * @param {Record<string, any>} options - The options to pass to the command\n   * @returns {ICommandScheduler} The scheduler instance for chaining\n   */\n  schedule(\n    commandName: string,\n    expression: IScheduleExpression,\n    args?: string[],\n    options?: Record<string, any>,\n  ): ICommandScheduler\n\n  /**\n   * Starts the scheduler\n   *\n   * @param {number} interval - The interval in milliseconds to check for tasks to run\n   * @returns {ICommandScheduler} The scheduler instance for chaining\n   */\n  start(interval?: number): ICommandScheduler\n\n  /**\n   * Stops the scheduler\n   *\n   * @returns {ICommandScheduler} The scheduler instance for chaining\n   */\n  stop(): ICommandScheduler\n\n  /**\n   * Gets all scheduled tasks\n   *\n   * @returns {IScheduledTask[]} The scheduled tasks\n   */\n  getTasks(): IScheduledTask[]\n\n  /**\n   * Clears all scheduled tasks\n   *\n   * @returns {ICommandScheduler} The scheduler instance for chaining\n   */\n  clearTasks(): ICommandScheduler\n}\n\n/**\n * Namespace for ICommandScheduler interface\n *\n * Contains token for dependency injection\n */\nexport namespace ICommandScheduler {\n  /**\n   * Token for the ICommandScheduler interface\n   * Used for dependency injection\n   */\n  export const $ = Symbol('ICommandScheduler')\n}\n"]}