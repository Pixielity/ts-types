{"version":3,"sources":["../../../src/interfaces/redis/factory.interface.ts"],"names":["IRedisFactory"],"mappings":";;;;;;;;;;;;;AAwEiBA;AAAA,CAAV,CAAUA,cAAV,KAAA;AACE,EAAMA,cAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,eAAe,CAAA;AAAA,CAD5B,EAAAA,qBAAA,KAAAA,qBAAA,GAAA,EAAA,CAAA,CAAA","file":"factory.interface.js","sourcesContent":["import type { IRedisConnection } from \"./connection.interface\"\n\n/**\n * Redis factory interface\n * Responsible for creating and managing Redis connections\n */\nexport interface IRedisFactory {\n  /**\n   * Get a Redis connection by name\n   * @param name - The connection name (optional, uses default if not provided)\n   * @returns A Redis connection instance\n   *\n   * @example\n   * ```typescript\n   * // Get the default connection\n   * const redis = factory.connection();\n   *\n   * // Get a specific named connection\n   * const cache = factory.connection('cache');\n   * ```\n   */\n  connection(name?: string): IRedisConnection\n\n  /**\n   * Create a new Redis connection\n   * @param config - The connection configuration\n   * @returns A Redis connection instance\n   */\n  make(config: Record<string, any>): IRedisConnection\n\n  /**\n   * Get the default connection name\n   * @returns The default connection name\n   */\n  getDefaultConnection(): string\n\n  /**\n   * Set the default connection name\n   * @param name - The default connection name\n   */\n  setDefaultConnection(name: string): void\n\n  /**\n   * Get all registered connections\n   * @returns A record of connection names to connection instances\n   */\n  getConnections(): Record<string, IRedisConnection>\n\n  /**\n   * Check if a connection exists\n   * @param name - The connection name\n   * @returns True if the connection exists\n   */\n  hasConnection(name: string): boolean\n\n  /**\n   * Add a connection to the factory\n   * @param name - The connection name\n   * @param connection - The connection instance\n   */\n  addConnection(name: string, connection: IRedisConnection): void\n\n  /**\n   * Remove a connection from the factory\n   * @param name - The connection name\n   */\n  removeConnection(name: string): void\n}\n\n/**\n * DI token for IRedisFactory interface\n */\nexport namespace IRedisFactory {\n  export const $ = Symbol.for(\"IRedisFactory\")\n}\n"]}